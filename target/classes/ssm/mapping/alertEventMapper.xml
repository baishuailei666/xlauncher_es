<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
namespace是该xml对应的接口全名，select和update中的id对应方法名，resultType是返回值类型，parameterType是参数类型（这个其实可选），
最后#{...}中填写的是方法的参数，-->


<mapper namespace="ssm.dao.AlertEventDao">

    <!-- 添加事件信息-->
    <insert id="addEvent" parameterType="ssm.entity.AlertEvent">
        INSERT INTO es_alert_event(
            event_starttime,cam_id,type_id,event_source
        )
        VALUES
        (#{eventStartTime},#{camId},#{typeId},#{eventSource})

    </insert>


    <!-- 更新事件信息的状态-->
    <update id="updateEventStatus" parameterType="ssm.entity.AlertEvent">
        UPDATE es_alert_event
        SET event_push_status=#{eventPushStatus}
        WHERE event_starttime=#{eventStartTime}

    </update>

    <!-- resultMap -->
    <resultMap id="alertEventResultMap" type="ssm.entity.AlertEvent">
        <id property="eventId" column="event_id"/>
        <result property="eventStartTime" column="event_starttime"/>
        <result property="typeId" column="type_id"/>
        <result property="typeDescription" column="type_description"/>
        <result property="camId" column="cam_id"/>
        <result property="eventSource" column="event_source"/>
        <result property="eventPushStatus" column="event_push_status"/>
    </resultMap>
    <resultMap id="eventDataResultMap" type="ssm.entity.EventData">
        <id property="eventId" column="event_id"/>
        <result property="eventStartTime" column="event_starttime"/>
        <result property="typeDescription" column="type_description"/>
        <result property="camId" column="cam_id"/>
        <result property="eventSource" column="event_source"/>
        <result property="eventPushStatus" column="event_push_status"/>
    </resultMap>

    <!-- 查询所有事件信息 -->
    <select id="getAllEvents" parameterType="int" resultMap="alertEventResultMap">
        SELECT
        es_alert_event.event_id,
        es_alert_event.event_starttime,
        es_alert_event.type_id,
        es_event_type.type_description,
        es_alert_event.cam_id,
        es_alert_event.event_source,
        es_alert_event.event_push_status
        FROM
        es_alert_event ,
        es_event_type
        WHERE es_alert_event.type_id=es_event_type.type_id
    </select>

    <!--根据id查询-->
    <select id="getEventById" parameterType="int" resultMap="alertEventResultMap">
        SELECT
        es_alert_event.event_id,
        es_alert_event.event_starttime,
        es_alert_event.type_id,
        es_event_type.type_description,
        es_alert_event.cam_id,
        es_alert_event.event_source,
        es_alert_event.event_push_status
        FROM
        es_alert_event ,
        es_event_type
        WHERE es_alert_event.type_id=es_event_type.type_id
        AND es_alert_event.event_id=#{eventId}
    </select>



    <!--根据event_starttime查询-->
    <select id="getEventByStartTime" parameterType="String" resultMap="alertEventResultMap">
        SELECT
        es_alert_event.event_id,
        es_alert_event.event_starttime,
        es_alert_event.type_id,
        es_event_type.type_description,
        es_alert_event.cam_id,
        es_alert_event.event_source,
        es_alert_event.event_push_status
        FROM
        es_alert_event ,
        es_event_type
        WHERE es_alert_event.type_id=es_event_type.type_id
        AND es_alert_event.event_starttime=#{_parameter ,jdbcType=VARCHAR}
    </select>


    <!--根据Cam_id查询-->
    <select id="getEventByCamId" parameterType="int" resultMap="alertEventResultMap">
        SELECT
        es_alert_event.event_id,
        es_alert_event.event_starttime,
        es_alert_event.type_id,
        es_event_type.type_description,
        es_alert_event.cam_id,
        es_alert_event.event_source,
        es_alert_event.event_push_status
        FROM
        es_alert_event ,
        es_event_type
        WHERE es_alert_event.type_id=es_event_type.type_id
        AND es_alert_event.cam_id like concat('%',#{camId},'%')
    </select>


    <!-- 多条件模糊查询 查询所有事件信息-->
    <select id="getEventFromParam" parameterType="int" resultMap="alertEventResultMap">
        SELECT
        es_alert_event.event_id,
        es_alert_event.event_starttime,
        es_alert_event.type_id,
        es_event_type.type_description,
        es_alert_event.cam_id,
        es_alert_event.event_source,
        es_alert_event.event_push_status
        FROM
        es_alert_event ,
        es_event_type
        WHERE es_alert_event.type_id=es_event_type.type_id
        <choose>
            <when test="event_starttime != null and event_starttime != ''">
                AND event_starttime like concat('%',#{eventStartTime},'%')
            </when>
            <when test="event_cam_id != null and event_cam_id != ''">
                AND cam_id like concat('%',#{camId},'%')
            </when>
            <when test="type_id != null and type_id != ''">
                AND type_id like concat('%',#{typeId},'%')
            </when>
            <when test="event_push_status != null and event_push_status != ''">
                AND event_push_status like concat('%',#{eventPushStatus},'%')
            </when>
            <otherwise>
                AND event_id like concat('%',#{eventId},'%')
            </otherwise>
        </choose>
    </select>

</mapper>
